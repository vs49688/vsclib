#include <ostream>
#include <vscpplib.hpp>
#include "catch.hpp"

static std::ostream& operator<<(std::ostream& os, const VscColour32& c) noexcept
{
    return os << "{" << int(c.r) << ", " << int(c.g) << ", " << int(c.b) << ", " << int(c.a) << "}";
}

TEST_CASE("colour conversions", "[colour]")
{
    SECTION("rgb565") {
        CHECK(0x0000u == VSC_COLOUR_RGB565(0x00, 0x00, 0x00));
        CHECK(0xF800u == VSC_COLOUR_RGB565(0xFF, 0x00, 0x00));
        CHECK(0x07E0u == VSC_COLOUR_RGB565(0x00, 0xFF, 0x00));
        CHECK(0x001Fu == VSC_COLOUR_RGB565(0x00, 0x00, 0xFF));
        CHECK(0xFFFFu == VSC_COLOUR_RGB565(0xFF, 0xFF, 0xFF));

        CHECK(0x0000u == vsc_colour_pack_rgb565({0x00, 0x00, 0x00}));
        CHECK(0xF800u == vsc_colour_pack_rgb565({0xFF, 0x00, 0x00}));
        CHECK(0x07E0u == vsc_colour_pack_rgb565({0x00, 0xFF, 0x00}));
        CHECK(0x001Fu == vsc_colour_pack_rgb565({0x00, 0x00, 0xFF}));
        CHECK(0xFFFFu == vsc_colour_pack_rgb565({0xFF, 0xFF, 0xFF}));

        CHECK(vsc_colour_unpack_rgb565(0x0000u) == vsc::Colour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_rgb565(0xF800u) == vsc::Colour32{0xFF, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_rgb565(0x07E0u) == vsc::Colour32{0x00, 0xFF, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_rgb565(0x001Fu) == vsc::Colour32{0x00, 0x00, 0xFF, 0xFF});
        CHECK(vsc_colour_unpack_rgb565(0xFFFFu) == vsc::Colour32{0xFF, 0xFF, 0xFF, 0xFF});
    }

    SECTION("argb1555") {
        CHECK(0x0000u == VSC_COLOUR_ARGB1555(0x00, 0x00, 0x00, 0x00));
        CHECK(0x8000u == VSC_COLOUR_ARGB1555(0xFF, 0x00, 0x00, 0x00));
        CHECK(0x7C00u == VSC_COLOUR_ARGB1555(0x00, 0xFF, 0x00, 0x00));
        CHECK(0x03E0u == VSC_COLOUR_ARGB1555(0x00, 0x00, 0xFF, 0x00));
        CHECK(0x001Fu == VSC_COLOUR_ARGB1555(0x00, 0x00, 0x00, 0xFF));
        CHECK(0xFFFFu == VSC_COLOUR_ARGB1555(0xFF, 0xFF, 0xFF, 0xFF));

        CHECK(0x0000u == vsc_colour_pack_argb1555(VscColour32{0x00, 0x00, 0x00, 0x00}));
        CHECK(0x8000u == vsc_colour_pack_argb1555(VscColour32{0x00, 0x00, 0x00, 0xFF}));
        CHECK(0x7C00u == vsc_colour_pack_argb1555(VscColour32{0xFF, 0x00, 0x00, 0x00}));
        CHECK(0x03E0u == vsc_colour_pack_argb1555(VscColour32{0x00, 0xFF, 0x00, 0x00}));
        CHECK(0x001Fu == vsc_colour_pack_argb1555(VscColour32{0x00, 0x00, 0xFF, 0x00}));
        CHECK(0xFFFFu == vsc_colour_pack_argb1555(VscColour32{0xFF, 0xFF, 0xFF, 0xFF}));

        CHECK(vsc_colour_unpack_argb1555(0x0000u) == VscColour32{0x00, 0x00, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb1555(0x8000u) == VscColour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_argb1555(0x7C00u) == VscColour32{0xFF, 0x00, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb1555(0x03E0u) == VscColour32{0x00, 0xFF, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb1555(0x001Fu) == VscColour32{0x00, 0x00, 0xFF, 0x00});
        CHECK(vsc_colour_unpack_argb1555(0xFFFFu) == VscColour32{0xFF, 0xFF, 0xFF, 0xFF});
    }

    SECTION("xrgb1555") {
        CHECK(0x8000u == VSC_COLOUR_XRGB1555(0x00, 0x00, 0x00));
        CHECK(0xFC00u == VSC_COLOUR_XRGB1555(0xFF, 0x00, 0x00));
        CHECK(0x83E0u == VSC_COLOUR_XRGB1555(0x00, 0xFF, 0x00));
        CHECK(0x801Fu == VSC_COLOUR_XRGB1555(0x00, 0x00, 0xFF));
        CHECK(0xFFFFu == VSC_COLOUR_XRGB1555(0xFF, 0xFF, 0xFF));

        CHECK(0x8000u == vsc_colour_pack_xrgb1555({0x00, 0x00, 0x00}));
        CHECK(0xFC00u == vsc_colour_pack_xrgb1555({0xFF, 0x00, 0x00}));
        CHECK(0x83E0u == vsc_colour_pack_xrgb1555({0x00, 0xFF, 0x00}));
        CHECK(0x801Fu == vsc_colour_pack_xrgb1555({0x00, 0x00, 0xFF}));
        CHECK(0xFFFFu == vsc_colour_pack_xrgb1555({0xFF, 0xFF, 0xFF}));

        CHECK(vsc_colour_unpack_xrgb1555(0x8000u) == VscColour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb1555(0xFC00u) == VscColour32{0xFF, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb1555(0x83E0u) == VscColour32{0x00, 0xFF, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb1555(0x801Fu) == VscColour32{0x00, 0x00, 0xFF, 0xFF});
        CHECK(vsc_colour_unpack_xrgb1555(0xFFFFu) == VscColour32{0xFF, 0xFF, 0xFF, 0xFF});
    }

    SECTION("argb8888") {
        CHECK(0x00000000u == VSC_COLOUR_ARGB8888(0x00, 0x00, 0x00, 0x00));
        CHECK(0xFF000000u == VSC_COLOUR_ARGB8888(0xFF, 0x00, 0x00, 0x00));
        CHECK(0x00FF0000u == VSC_COLOUR_ARGB8888(0x00, 0xFF, 0x00, 0x00));
        CHECK(0x0000FF00u == VSC_COLOUR_ARGB8888(0x00, 0x00, 0xFF, 0x00));
        CHECK(0x000000FFu == VSC_COLOUR_ARGB8888(0x00, 0x00, 0x00, 0xFF));
        CHECK(0xFFFFFFFFu == VSC_COLOUR_ARGB8888(0xFF, 0xFF, 0xFF, 0xFF));

        CHECK(0x00000000u == vsc_colour_pack_argb8888(VscColour32{0x00, 0x00, 0x00, 0x00}));
        CHECK(0xFF000000u == vsc_colour_pack_argb8888(VscColour32{0x00, 0x00, 0x00, 0xFF}));
        CHECK(0x00FF0000u == vsc_colour_pack_argb8888(VscColour32{0xFF, 0x00, 0x00, 0x00}));
        CHECK(0x0000FF00u == vsc_colour_pack_argb8888(VscColour32{0x00, 0xFF, 0x00, 0x00}));
        CHECK(0x000000FFu == vsc_colour_pack_argb8888(VscColour32{0x00, 0x00, 0xFF, 0x00}));
        CHECK(0xFFFFFFFFu == vsc_colour_pack_argb8888(VscColour32{0xFF, 0xFF, 0xFF, 0xFF}));

        CHECK(vsc_colour_unpack_argb8888(0x00000000u) == VscColour32{0x00, 0x00, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb8888(0xFF000000u) == VscColour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_argb8888(0x00FF0000u) == VscColour32{0xFF, 0x00, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb8888(0x0000FF00u) == VscColour32{0x00, 0xFF, 0x00, 0x00});
        CHECK(vsc_colour_unpack_argb8888(0x000000FFu) == VscColour32{0x00, 0x00, 0xFF, 0x00});
        CHECK(vsc_colour_unpack_argb8888(0xFFFFFFFFu) == VscColour32{0xFF, 0xFF, 0xFF, 0xFF});
    }

    SECTION("xrgb8888") {
        CHECK(0xFF000000u == VSC_COLOUR_XRGB8888(0x00, 0x00, 0x00));
        CHECK(0xFF000000u == VSC_COLOUR_XRGB8888(0x00, 0x00, 0x00));
        CHECK(0xFFFF0000u == VSC_COLOUR_XRGB8888(0xFF, 0x00, 0x00));
        CHECK(0xFF00FF00u == VSC_COLOUR_XRGB8888(0x00, 0xFF, 0x00));
        CHECK(0xFF0000FFu == VSC_COLOUR_XRGB8888(0x00, 0x00, 0xFF));
        CHECK(0xFFFFFFFFu == VSC_COLOUR_XRGB8888(0xFF, 0xFF, 0xFF));

        CHECK(0xFF000000u == vsc_colour_pack_xrgb8888(VscColour32{0x00, 0x00, 0x00, 0x00}));
        CHECK(0xFF000000u == vsc_colour_pack_xrgb8888(VscColour32{0x00, 0x00, 0x00, 0x00}));
        CHECK(0xFFFF0000u == vsc_colour_pack_xrgb8888(VscColour32{0xFF, 0x00, 0x00, 0x00}));
        CHECK(0xFF00FF00u == vsc_colour_pack_xrgb8888(VscColour32{0x00, 0xFF, 0x00, 0x00}));
        CHECK(0xFF0000FFu == vsc_colour_pack_xrgb8888(VscColour32{0x00, 0x00, 0xFF, 0x00}));
        CHECK(0xFFFFFFFFu == vsc_colour_pack_xrgb8888(VscColour32{0xFF, 0xFF, 0xFF, 0x00}));

        CHECK(vsc_colour_unpack_xrgb8888(0x00000000u) == VscColour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb8888(0xFF000000u) == VscColour32{0x00, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb8888(0x00FF0000u) == VscColour32{0xFF, 0x00, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb8888(0x0000FF00u) == VscColour32{0x00, 0xFF, 0x00, 0xFF});
        CHECK(vsc_colour_unpack_xrgb8888(0x000000FFu) == VscColour32{0x00, 0x00, 0xFF, 0xFF});
        CHECK(vsc_colour_unpack_xrgb8888(0xFFFFFFFFu) == VscColour32{0xFF, 0xFF, 0xFF, 0xFF});
    }
}
